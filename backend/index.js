"use strict";\n\n// Express server entrypoint for Pattaya Directory\n// - Serves static frontend from /public\n// - Exposes /api/events for filtering/sorting/pagination\n// - Enables CORS and basic logging\n\nconst path = require("path");\nconst express = require("express");\nconst cors = require("cors");\nconst morgan = require("morgan");\n\nconst eventsRouter = require("./routes/events");\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\n// Middleware\napp.use(cors());\napp.use(morgan("dev"));\napp.use(express.json());\n\n// API routes\napp.use("/api/events", eventsRouter);\n\n// Serve static frontend\napp.use(express.static(path.join(__dirname, "../public")));\n\n// Health check\napp.get("/health", (req, res) => {\n  res.json({ status: "ok", uptime: process.uptime() });\n});\n\n// 404 for unknown API routes\napp.use("/api", (req, res) => {\n  res.status(404).json({ error: "Not found" });\n});\n\n// Generic error handler\n// eslint-disable-next-line no-unused-vars\napp.use((err, req, res, next) => {\n  console.error("Unhandled error:", err);\n  res.status(500).json({ error: "Internal Server Error" });\n});\n\napp.listen(PORT, () => {\n  console.log(`Pattaya Directory server listening on http://localhost:${PORT}`);\n});